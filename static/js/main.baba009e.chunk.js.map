{"version":3,"sources":["serviceWorker.js","tileData.js","index.js"],"names":["Boolean","window","location","hostname","match","tileData","img","title","author","cols","style","transform","inputProps","step","nav","background","color","display","width","flexGrow","menuButton","marginLeft","marginRight","root","grow","cardstyles","card","minWidth","marginBottom","fontSize","pos","p","lineHeight","photoStyles","flexWrap","justifyContent","overflow","backgroundColor","gridList","height","Nav","react_default","a","createElement","index_es","className","IconButton_default","aria-label","Menu_default","variant","noWrap","label","React","Component","ReactDOM","render","src_Nav","document","getElementById","AboutCard","Card_default","CardContent_default","gutterBottom","component","CardActions_default","Button_default","size","src_AboutCard","PhotoGrid","GridList_default","cellHeight","map","tile","GridListTile_default","key","src","alt","GridListTileBar_default","src_PhotoGrid","DemoButton","Fragment","CssBaseline_default","src_DemoButton","FeatureButton","src_FeatureButton","DemoLoginForm","TextField_default","id","type","src_DemoLoginForm","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.baba009e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const tileData = [\n    {\n        img: 'https://images.pexels.com/photos/2055231/pexels-photo-2055231.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\n        title: 'Adorable Puppy',\n        author: 'author',\n        cols: 2,\n    },\n    {\n        img: 'https://images.pexels.com/photos/1095901/pexels-photo-1095901.png?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\n        title: 'Times Square',\n        author: 'author',\n        cols: 1,\n    },\n    {\n        img: \"https://images.pexels.com/photos/962986/pexels-photo-962986.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n        title: 'Custom House Quay',\n        author: 'author',\n        cols: 3,\n    },\n    {\n        img: \"https://images.pexels.com/photos/247929/pexels-photo-247929.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n        title: 'Vintage Shop',\n        author: 'author',\n        cols: 1,\n    },\n    {\n        img: \"https://images.pexels.com/photos/1050316/pexels-photo-1050316.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n        title: 'Bord Gais Theatre',\n        author: 'author',\n        cols: 2,\n        style: {\n            transform: 'translateY(-25%)',\n        }\n    },\n    ];\nexport default tileData","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {AppBar, Tabs, Tab, Typography, Toolbar} from '@material-ui/core'\nimport './libraries/bootstrap.min.css';\nimport './index.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport * as serviceWorker from './serviceWorker';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport tileData from './tileData';\n\n\nconst inputProps = {\n  step: 500,\n};\n\nconst nav = {\n    background: 'royalblue',\n    color: '#fafafa',\n    display: 'block',\n    width: '100%',\n    flexGrow: 1,\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 30,\n      },\n    root: {\n        flexGrow: 1,\n      },\n    grow: {\n        flexGrow: 1,\n      },\n}\n\nconst cardstyles = {\n    card: {\n        minWidth: 300,\n        marginBottom: 50,\n      },\n      title: {\n        fontSize: 14,\n      },\n      pos: {\n        marginBottom: 20,\n      },\n      p: {\n          fontSize: 18,\n          lineHeight: 1.5,\n      }\n}\n\nconst photoStyles = {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: '#fafafa',\n    },\n    gridList: {\n      width: 500,\n      height: 450,\n    },\n  };\n\nclass Nav extends React.Component {\n  render() {\n    return (\n        <AppBar title=\"Let's Try Cool Styles!\" style={nav} className={nav.root}>\n            <Toolbar>\n                <IconButton className={nav.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap className={nav.grow}>\n                    Try Cool Styles!\n                </Typography>\n                <Tabs>\n                    <Tab label=\"Home\" />\n                    <Tab label=\"Photos\" />\n                    <Tab label=\"More\" />\n                    <Tab label=\"Contact\" />\n                </Tabs>\n            </Toolbar>\n        </AppBar>\n    )\n  }\n}\n\nReactDOM.render(<Nav />, document.getElementById('nav'))\n\nclass AboutCard extends React.Component {\n    render () {\n        return (\n        <Card className={cardstyles.card}>\n            <CardContent>\n                <Typography className={cardstyles.title} color=\"textSecondary\" gutterBottom>\n                Home\n                </Typography>\n                <br />\n                <Typography variant=\"h5\" component=\"h2\">\n                Check out some cool styling components using the Material UI Framework for React.js!\n                </Typography>\n                <Typography className={cardstyles.pos} color=\"textSecondary\">\n                Keep scrolling for more component examples! \n                </Typography>\n                <br />\n                <Typography className={cardstyles.p}>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Euismod nisi porta lorem mollis aliquam. Ac feugiat sed lectus vestibulum mattis ullamcorper velit sed ullamcorper. Et pharetra pharetra massa massa ultricies mi. Ornare arcu dui vivamus arcu felis bibendum ut. Ultrices mi tempus imperdiet nulla malesuada pellentesque elit. Nisl pretium fusce id velit ut tortor. Quis commodo odio aenean sed adipiscing diam donec adipiscing. Tortor id aliquet lectus proin nibh. At lectus urna duis convallis. Vel orci porta non pulvinar neque laoreet suspendisse interdum consectetur. Duis tristique sollicitudin nibh sit amet. Massa massa ultricies mi quis hendrerit dolor magna eget est. Risus feugiat in ante metus dictum at. Tellus cras adipiscing enim eu turpis egestas pretium aenean. Ut eu sem integer vitae justo eget magna fermentum iaculis. Urna cursus eget nunc scelerisque viverra. Viverra suspendisse potenti nullam ac. \n                <br />\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\">Take me to the components!</Button>\n            </CardActions>\n        </Card>\n        );\n    }\n}\n\nReactDOM.render(<AboutCard />, document.getElementById('card'))\n\nclass PhotoGrid extends React.Component {\n    render() {\n        return (\n            <div className={photoStyles.root}>\n                <GridList cellHeight={400} className={photoStyles.gridList} cols={3}>\n                    {tileData.map(tile => (\n                    <GridListTile key={tile.img} cols={tile.cols}>\n                        <img src={tile.img} style={tile.style} alt={tile.title}/>\n                        <GridListTileBar\n                            title={tile.title}\n                        />\n                    </GridListTile>\n                    ))}\n                </GridList>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<PhotoGrid />, document.getElementById('photos'));\n\n\nclass DemoButton extends React.Component {\n    render () {\n    return (\n        <React.Fragment>\n        <CssBaseline />\n            <Button variant=\"contained\" color=\"secondary\">\n                This is my button <i className=\"material-icons\">\n                accessibility\n                </i>\n            </Button>\n            <Button variant=\"outlined\" color=\"primary\" size=\"small\">\n            This is my other button<i className=\"material-icons\">\n                done\n                </i>\n            </Button>\n      </React.Fragment>\n    );\n  }\n}\n\nReactDOM.render(<DemoButton />, document.getElementById('root'));\n\nclass FeatureButton extends React.Component {\n    render () {\n        return (\n            <React.Fragment>\n            <CssBaseline />\n                <Button variant=\"contained\" color=\"primary\">\n                App Feature Button\n                </Button>\n            </React.Fragment>\n        );\n    }\n}\nReactDOM.render(<FeatureButton />, document.getElementById('search'));\n\n\nclass DemoLoginForm extends React.Component {\n    render () {\n        return (\n            <React.Fragment>\n            <CssBaseline />\n                <TextField id=\"time\" type=\"text\" label='username' inputProps={inputProps} />\n                <TextField id=\"time\" type=\"password\" label='password' inputProps={inputProps} />\n                <Button variant=\"fab\" color=\"secondary\" size='regular'>\n                    <i className=\"material-icons\">\n                    done\n                    </i>\n                </Button>\n            </React.Fragment>\n        );\n    }\n}\nReactDOM.render(<DemoLoginForm />, document.getElementById('loginForm'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}